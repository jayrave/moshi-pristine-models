buildscript {
    def kotlinVersion = '1.7.0-RC2'
    ext.kotlinVersion = kotlinVersion

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


apply plugin: 'kotlin'


sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6


repositories {
    google()
    mavenCentral()
    jcenter()
}


dependencies {
    // Kotlin
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")

    // Moshi
    implementation 'com.squareup.moshi:moshi:1.3.1'

    // Test
    testImplementation 'org.assertj:assertj-core:1.7.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.github.salomonbrys.kotson:kotson:2.3.0'
}


// ========================================= Publishing ============================================

apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'


ext {
    publishedGroupId = 'com.jayrave'
    publishedArtifactId = 'moshi-pristine-models'

    bintrayRepo = 'kotlin'
    bintrayName = publishedArtifactId

    libraryName = 'Moshi Pristine Models'
    libraryVersionName = '1.0.0'
    libraryDescription = 'Moshi add-on to programmatically define mapping between models & JSON'

    siteUrl = 'https://github.com/jayrave/moshi-pristine-models'
    gitUrl = 'https://github.com/jayrave/moshi-pristine-models.git'
    issuesUrl = 'https://github.com/jayrave/moshi-pristine-models/issues'

    developerId = 'jayrave'
    developerName = 'Jayanthan Raveendiran'
    developerEmail = 'jayanthan.raveendiran@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']
}


install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                groupId publishedGroupId
                artifactId publishedArtifactId

                name libraryName
                description libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }

                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives sourcesJar
}


group = publishedGroupId
version = libraryVersionName


bintray {
    File propertiesFile = project.rootProject.file('local.properties')

    if (propertiesFile.exists()) {
        Properties properties = new Properties()
        properties.load(propertiesFile.newDataInputStream())

        user = properties['bintray.user']
        key = properties['bintray.apikey']
        publish = true
        configurations = ['archives']

        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            issueTrackerUrl = issuesUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            publicDownloadNumbers = true
            version {
                name = libraryVersionName
                released = new Date()
            }
        }
    }
}


// ========================================= Publishing ============================================